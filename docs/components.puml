@startuml

package snode as "Sensor Node" {
    component esp32 as "Microcontroller\nWiFi Module" <<ESP-WROOM-32E>> 
    component ldo as "3.3V LDO\n>500mA"
    component BME280 as "T/P/RH% Sensor" <<BME280>> 
    interface USB as "USB (5V)"
    interface VSPI
    interface HSPI 
    interface I2C 
    interface DAC 
    interface GPIO 
}

package module as "Addon module" {
    component sipo_sr as "SIPO Shift\nRegister" <<595>>
    component piso_sr as "PISO Shift\nRegister" <<165>>
    component id_eeprom as "ID Chip" <<25AA02E64T>>
    component sensor as "Sensor/Functional ICs" <<ADS1220>> 

    interface measurement as "Measurements"
    interface module_inputs as "I/O: Inputs"
    interface module_outputs as "I/O: Outputs"
}

component ext_sensors as "External / Detachable\n sensors"


package server as "Server" {
    component mqtt_broker as "MQTT Broker" <<Mosquitto>> 
    interface mqtt as "MQTT" 

    component telegraf as "Telegraf\n(data collector)"
    database db as "Database" <<InfluxDB>>
    interface influx as "DB\nAccess"

    component grafana as "Grafana"
    interface HTTPS 
}

component pc as "Admin PC"


telegraf ..> mqtt 
telegraf ..> influx 
grafana ..> influx 
grafana -left- HTTPS 
ldo .d.> USB  
esp32 ..> mqtt
esp32 -d- VSPI
esp32 -- HSPI
esp32 -- I2C 
esp32 -r- DAC
esp32 -- GPIO
BME280 .r.> I2C
mqtt_broker - mqtt 
db -up- influx

piso_sr -d- module_inputs
sipo_sr -d- module_outputs
HSPI <.. sipo_sr
HSPI <.. piso_sr
GPIO <.. piso_sr  
GPIO <.. sipo_sr
sipo_sr --> sipo_sr
piso_sr --> piso_sr


id_eeprom ..> module_outputs : CS# pin 
id_eeprom ..> VSPI

sensor ..> VSPI 
sensor ..> module_outputs
sensor ..> module_inputs : (optional)
sensor -d- measurement
sensor .u.> I2C
ext_sensors -u- measurement

pc .up..> mqtt : <for config etc.> 

'Tuning 
piso_sr <-[hidden] sensor
DAC <-[hidden] ldo
BME280 <-[hidden] ldo
I2C <-[hidden] GPIO

'GPIO <.right. HSPI
'GPIO <.left. VSPI

' Doesn't seem to play nicely layout-wise: 
'snode "1" --o "0..*" module

@enduml